/*
 * Copyright 2016 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package somepackage;

import com.google.android.libraries.remixer.BooleanRemix;
import com.google.android.libraries.remixer.Remix;
import com.google.android.libraries.remixer.RemixCallback;
import com.google.android.libraries.remixer.Remixer;
import com.google.android.libraries.remixer.annotation.RemixerBinder;
import java.lang.Boolean;
import java.lang.Override;

/**
 * This class was generated by RemixerAnnotationProcessor */
class Correct_RemixerBinder extends RemixerBinder.Binder<Correct> {
  @Override
  public void bindInstance(Correct activity) {
    Remixer remixer;
    if (activity.remixer == null) {
      remixer = new Remixer();
    } else {
      remixer = activity.remixer;
    }
    Correct_correct_correct correct_callback = new Correct_correct_correct(activity);
    BooleanRemix correct_remix = new BooleanRemix("correct", "correct", false, correct_callback, 0);
    remixer.addRemix(correct_remix);
    activity.remixer = remixer;
  }

  static class Correct_correct_correct implements RemixCallback<Boolean> {
    private final Correct activity;

    Correct_correct_correct(Correct activity) {
      this.activity = activity;
    }

    @Override
    public void onValueSet(Remix<Boolean> remix) {
      activity.correct(remix.getSelectedValue());
    }
  }
}
